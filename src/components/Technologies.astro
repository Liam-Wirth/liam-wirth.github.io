---
// TODO: It would be nice to use the daisyUI carousel?
import { type SimpleIcon } from 'simple-icons';
import * as simpleIcons from 'simple-icons/icons';
import TechCard from './TechCard.astro';
import '../assets/global.css';
//holy shid???
// using an obscure data structure??? erm... EPIC
import { CircularLinkedList } from './CircularLinkedList';

export interface Tech {
  text: string;
  simple: SimpleIcon;
}

export const technologies: Tech[] = [
  { text: 'Rust', simple: simpleIcons.siRust },
  { text: 'Arch', simple: simpleIcons.siArchlinux },
  { text: 'Git', simple: simpleIcons.siGit },
  { text: 'Bash', simple: simpleIcons.siGnubash },
  { text: 'JS', simple: simpleIcons.siJavascript },
  { text: 'TS', simple: simpleIcons.siTypescript },
  { text: 'Astro', simple: simpleIcons.siAstro },
  { text: 'Tailwind', simple: simpleIcons.siTailwindcss },
  { text: 'Linux', simple: simpleIcons.siLinux },
  { text: 'Lua', simple: simpleIcons.siLua },
  { text: 'Neovim', simple: simpleIcons.siNeovim },
  { text: 'C', simple: simpleIcons.siC },
  { text: 'C++', simple: simpleIcons.siCplusplus },
  { text: 'Latex', simple: simpleIcons.siLatex },
  { text: 'Emacs', simple: simpleIcons.siGnuemacs },
  { text: 'Python', simple: simpleIcons.siPython },
  { text: 'Markdown', simple: simpleIcons.siMarkdown },
  { text: 'Org', simple: simpleIcons.siOrg },
  { text: 'Ruby', simple: simpleIcons.siRuby },
  { text: 'Premiere', simple: simpleIcons.siAdobepremierepro },
  { text: 'Photoshop', simple: simpleIcons.siAdobephotoshop },
  { text: 'LeetCode', simple: simpleIcons.siLeetcode },
  { text: 'MakeFile', simple: simpleIcons.siMake },
  { text: 'MuseScore', simple: simpleIcons.siMusescore },
  { text: 'Discord', simple: simpleIcons.siDiscord },
  { text: 'SpotifyAPI', simple: simpleIcons.siSpotify },
];

const shuffle = (arr: Tech[]) => [...arr].sort(() => 0.5 - Math.random());
export const row1 = technologies.slice(0, Math.ceil(technologies.length / 2));
export const row2 = technologies.slice(Math.ceil(technologies.length / 2), technologies.length);
---
    <div class="loop-slider w-full overflow-hidden mb-4">
      <div class="inner">
        {row1.map((tech) => (
          <div class="tech-card-container">
            <TechCard tech={tech} />
          </div>
        ))}
        {row1.map((tech) => (
          <div class="tech-card-container">
            <TechCard tech={tech} />
          </div>
        ))}
      </div>
    </div>

    <div class="loop-slider2 w-full overflow-hidden">
      <div class="inner reverse">
        {row2.map((tech) => (
          <div class="tech-card-container">
            <TechCard tech={tech} />
          </div>
        ))}
        {row2.map((tech) => (
          <div class="tech-card-container">
            <TechCard tech={tech} />
          </div>
        ))}
      </div>
    </div>
  </div>


<style>
  .loop-slider, .loop-slider2 {
    position: relative;
    width: 70%;
    height: 80px; /* Adjust based on your icon size */
  }

  .inner {
    display: flex;
    position: absolute;
    width: fit-content;
    animation: loop 14s linear infinite;
  }

  .reverse {
    animation-direction: reverse;
  }

  @keyframes loop {
    0% {
      transform: translateX(0);
    }
    100% {
      transform: translateX(-50%);
    }
  }

  .tech-card-container {
    flex: 0 0 auto;
    margin-right: 1rem;
  }

/* I don't want it to pause so abruptly if it does pause though */
  .loop-slider:hover .inner,
  .loop-slider2:hover .inner {
    animation-play-state: paused;
    transition-timing-function: ease-in-out;
  }
</style>